{
  "name": "@hexuhua/coc-copilot",
  "version": "0.0.0-dev",
  "description": "",
  "main": "build/index.js",
  "engines": {
    "coc": "^0.0.82"
  },
  "keywords": [
    "coc",
    "coc.nvim",
    "copilot"
  ],
  "activationEvents": [
    "*"
  ],
  "scripts": {
    "lint": "eslint src --ext ts",
    "clean": "rimraf build",
    "watch": "yarn && NODE_ENV=development node esbuild.js --watch",
    "build": "yarn && NODE_ENV=production node esbuild.js",
    "prepare": "husky install && yarn clean"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,cjs,mjs}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css,less,sass,scss}": [
      "prettier --write"
    ]
  },
  "repository": "git@github.com:hexh250786313/coc-copilot.git",
  "author": "hexh <250786313@qq.com>",
  "license": "MIT",
  "devDependencies": {
    "@tsconfig/recommended": "^1.0.2",
    "@types/node": "^20.1.3",
    "@typescript-eslint/eslint-plugin": "^5.59.5",
    "@typescript-eslint/parser": "^5.59.5",
    "esbuild": "^0.15.7",
    "eslint": "^8.40.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.2",
    "prettier": "^2.8.8",
    "rimraf": "^5.0.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "coc.nvim": "^0.0.82",
    "eventemitter3": "^5.0.1"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-copilot configuration",
      "properties": {
        "copilot.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable coc-copilot extension"
        },
        "copilot.kindLabel": {
          "type": "string",
          "default": " ",
          "description": "Copilot kind label"
        },
        "copilot.priority": {
          "type": "integer",
          "default": 1000,
          "description": "Copilot source priority"
        },
        "copilot.limit": {
          "type": "integer",
          "default": 10,
          "description": "Copilot source limit"
        },
        "copilot.enablePreselect": {
          "type": "boolean",
          "default": true,
          "description": "Enable copilot preselect"
        },
        "copilot.shortcut": {
          "type": "string",
          "default": "Cop",
          "description": "Copilot shortcut"
        },
        "copilot.autoUpdateCompletion": {
          "type": "boolean",
          "default": true,
          "description": "Whether to update the completion panel automatically when the copilot result is updated"
        },
        "copilot.triggerCharacters": {
          "type": "array",
          "default": [
            ".",
            "/",
            "@",
            " ",
            "*",
            "<"
          ],
          "description": "The characters that trigger copilot completions. If not set, some characters will not trigger copilot completions (such as `.@/`)"
        },
        "copilot.keepCursorAfterCompletion": {
          "type": "boolean",
          "default": false,
          "description": "Whether to keep the content after the cursor. If it is true, the content after the cursor will be kept. If it is false, the content will be replaced according to the content of copilot. The default is false"
        },
        "copilot.timeout": {
          "type": "integer",
          "default": 5000,
          "description": "coc-copilot uses polling to get results from copilot.vim. If there is no result after <timeout> ms, it is considered that copilot.vim did not return the result, and then the polling ends. The default is 5000ms that same as coc completion default timeout"
        },
        "copilot.showStatus": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show the status of fetching suggestions"
        }
      }
    }
  }
}
